stages:
  - test
  - build
  - deploy

default:
  image: node:lts-alpine3.14
  # Cache modules in between jobs
  cache: &global_cache
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/
      - node_modules/
  tags:
    - andrielson
    - docker

install-dependencies:
  stage: .pre
  script:
    - apk add --no-cache libc6-compat
    - yarn install --cache-folder .yarn-cache --frozen-lockfile --prefer-offline

unit-tests:
  stage: test
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  script:
    - echo "Executing unit tests..."

build-artifacts:
  stage: build
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  script:
    - cp $ENV_LOCAL_FILE ./env.local
    - yarn build
    - yarn install --cache-folder .yarn-cache --ignore-scripts --prefer-offline --production
  artifacts:
    paths:
      - .next/
      - node_modules/
      - public/
      - package.json

push-image:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  cache: []
  script:
    - echo "Building Docker image..."
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo -e "*\n!dist/\n!node_modules/\n!package.json" > .dockerignore
    - >-
      /kaniko/executor
      --cache=true --cache-copy-layers=true --cache-ttl=24h
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.gitlab-ci"
      --destination "${CI_REGISTRY_IMAGE}"